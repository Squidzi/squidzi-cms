@page "/search/{Keyword}"
@inject ICMSService CMS

<!-- Page Header -->
<header class="masthead" style="background-image: url('@ViewModel.ImageHeader')">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="page-heading">
                    <h1>Search Results</h1>
                    <span class="subheading">Showing results for '@Keyword'</span>
                </div>
            </div>
        </div>
    </div>
</header>

<!-- Main Content -->
<div class="container">
    <div class="row">
        <div class="col-lg-10 col-md-10 mx-auto">
            @foreach (var item in SearchResults.OrderByDescending(r => r.CreatedDate))
            {
                <div class="row">
                    @if (item.Type == SearchResultItemTypeEnum.BlogPost)
                    {
                        <div class="col-lg-12 col-md-12 post-preview">
                            <a href="/@item.Url">
                                <h2 class="post-title">
                                    @item.Title
                                </h2>
                                <h3 class="post-subtitle">
                                    @item.Subtitle
                                </h3>
                            </a>
                            @if (item.Tags.Any())
                            {
                                <span class="meta mb-2">
                                    @foreach (var tag in item.Tags)
                                    {
                                        <a href="/search-tag/@tag" class="badge badge-secondary">@tag</a>
                                    }
                                </span>
                            }
                            <p class="post-meta">
                                Posted by
                                <a href="@item.Author.Link">
                                    @item.Author.Name
                                </a>
                                on @item.PublishedDate.Value.ToString("MMMM dd, yyyy")
                            </p>
                        </div>
                    }
                    @if (item.Type == SearchResultItemTypeEnum.Project)
                    {
                        <img class="col-lg-4 col-md-4" src="@item.ImageThumbnailUrl" />
                        <div class="col-lg-8 col-md-8 post-preview">
                            <a href="/@item.Url">
                                <h2 class="post-title">
                                    @item.Title
                                </h2>
                                <h3 class="post-subtitle">
                                    @item.Subtitle
                                </h3>
                            </a>
                            @if (item.Tags.Any())
                            {
                                <span class="meta mb-2">
                                    @foreach (var tag in item.Tags)
                                    {
                                        <a href="/search-tag/@tag" class="badge badge-secondary">@tag</a>
                                    }
                                </span>
                            }
                        </div>
                    }
                </div>
                <hr>
            }
        <h4 class="text-center mt-4">Showing @SearchResults.Count results</h4>
        </div>
    </div>
</div>

@functions {
    [Parameter]
    public string Keyword { get; set; }

    List<Models.ServiceModels.SearchResultItem> SearchResults { get; set; } = new List<Models.ServiceModels.SearchResultItem>();
    Models.CMS.Pages.PageSearchResults ViewModel { get; set; } = new Models.CMS.Pages.PageSearchResults();

    protected override async Task OnInitializedAsync()
    {
        SearchResults = await CMS.GetSearch(new GetSearchRequest()
        {
            Keyword = Keyword
        });
        ViewModel = await CMS.GetPage_SearchResults();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await MetaTagsManager.SetMetaTags(new SetMetaTagsRequest()
        {
            Title = "Search",
            Description = $"Search results for {Keyword}",
            Image = ViewModel.ImageHeader
        });
    }
}